{"version":3,"sources":["utils/logo.svg","launches/LaunchHeader.js","launches/LaunchTemplate.js","launches/LaunchInfo.js","launches/LaunchDiv.js","launches/LaunchDisplay.js","launches/RocketImage.js","launches/FavoriteButton.js","defaults/all.js","search/LaunchDatePicker.js","search/SearchInput.js","search/SearchPanel.js","utils/LoadingScreen.js","App/App.js","registerServiceWorker.js","stores/FavoritesStore.js","index.js"],"names":["module","exports","LaunchHeader","launchDetails","name","net","LaunchTemplate","rocketName","locationName","numberOfAgencies","agencyNames","LaunchInfo","agencies","console","log","length","array","forEach","agency","push","join","className","xs","md","Left","align","imageURL","this","props","imageSizes","Body","favoritesStore","launch","triggerReload","Component","LaunchDiv","header","eventKey","id","key","rocket","location","launchDivConstructor","LaunchDisplay","launches","map","RocketImage","newImageURL","replace","alt","src","FavoriteButton","toggleFavorite","hasFavorite","onClick","glyph","favoritesMessage","defaultStartDate","moment","defaultEndDate","add","LaunchDatePicker","updateDates","startDate","endDate","setState","updateParentDate","state","focusedInput","onDatesChange","onFocusChange","showClearDates","isOutsideRange","SearchInput","updateSearchType","value","newSearchType","searchType","refreshSearch","doSearch","launchData","agencyAbbrevations","abbrev","countryCode","toLowerCase","handleChange","queryText","searchResults","indexOf","updateSearchResults","inline","componentClass","InputGroup","Button","title","onSelect","type","placeholder","onChange","event","target","SearchPanel","LoadingScreen","logo","App","object","queryData","filtered","launchDisplayConstructor","searchResultDisplay","loading","favoriteResultDisplay","favorites","forceUpdate","favoriteLaunches","formattedStartDate","formattedEndDate","offset","format","fullLaunchURLTemplate","initialUrl","launchesURL","accessData","url","arrayOfData","fetch","then","result","ok","json","errorMessage","status","statusText","Error","data","processData","catch","error","errorHandler","newArray","concat","count","total","newOffset","newUrl","defaultActiveKey","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","FavoritesStore","extendObservable","findIndex","removeFavorite","addFavorite","index","splice","launchFavorites","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","response","headers","get","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.d58fbc69.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react';\n\nconst LaunchHeader = ({launchDetails}) => (\n  <strong>\n    <p>{launchDetails.name}</p>\n    <p>Launch Date: {launchDetails.net}</p>\n  </strong>\n)\n\nexport default LaunchHeader;","import React from 'react';\n\nconst LaunchTemplate = ({rocketName, locationName, numberOfAgencies, agencyNames}) => {\n  return (\n    <div>\n      {rocketName} is being prepared for launch at {locationName}. This rocket is controlled by {numberOfAgencies} {agencyNames}.\n    </div>\n  );\n}\n\nexport default LaunchTemplate;","import React, { Component } from 'react';\nimport { Media, Col } from \"../dependencies/react-bootstrap-dependencies\"\nimport { LaunchTemplate, RocketImage, FavoriteButton } from \"./all.js\"\n\nclass LaunchInfo extends Component {\n  numberOfAgencies(agencies) {\n    console.log(agencies);\n    if ( agencies == null )\n    {\n      return \"\"\n    }\n    if (agencies.length > 1) {\n      return agencies.length + \" agencies:\"\n    }\n    else {\n      return \"\"\n    }\n  }\n\n  agencyNames(agencies) {\n    var array = []\n    if ( agencies == null )\n    {\n      return \"an unknown agency\"\n    }\n    agencies.forEach((agency) => {\n      array.push(agency.name)\n    })\n    if (array.length > 1) {\n      array[array.length - 1] = \"and \" + array[array.length - 1]\n    }\n    return array.join(\", \")\n  }\n\n  render() {\n    return (\n      <Media className=\"Launch-info\">\n        <Col xs={6} md={4}>\n          <Media.Left align=\"top\">\n            <RocketImage imageURL={this.props.imageURL} imageSizes = {this.props.imageSizes} />\n          </Media.Left>\n        </Col>\n        <Col xs={12} md={8} >\n          <Media.Body>\n            <LaunchTemplate\n              rocketName = {this.props.rocketName}\n              locationName = {this.props.locationName}\n              numberOfAgencies = {this.numberOfAgencies(this.props.agencies)}\n              agencyNames = {this.agencyNames(this.props.agencies)} />\n              <Media.Left align=\"bottom\">\n                <FavoriteButton\n                  favoritesStore = {this.props.favoritesStore}\n                  launch = { this.props.launch}\n                  triggerReload = { this.props.triggerReload} />\n              </Media.Left>\n          </Media.Body>\n        </Col>\n      </Media>\n    );\n  }\n\n}\n\nexport default LaunchInfo;","import React from 'react';\nimport { Panel } from \"../dependencies/react-bootstrap-dependencies\"\nimport LaunchInfo from \"./LaunchInfo.js\"\nimport LaunchHeader from \"./LaunchHeader.js\"\n\nconst LaunchDiv = ({launchDetails, favoritesStore, triggerReload}) => (\n  <Panel\n    header={ LaunchHeader({launchDetails}) }\n    eventKey={launchDetails.id}\n    key={launchDetails.id}\n    className=\"Launch-div\">\n    <LaunchInfo\n      rocketName={launchDetails.rocket.name}\n      locationName={launchDetails.location.name}\n      agencies={launchDetails.rocket.agencies}\n      imageURL={launchDetails.rocket.imageURL}\n      imageSizes={launchDetails.rocket.imageSizes}\n      favoritesStore={favoritesStore}\n      launch={launchDetails}\n      triggerReload={triggerReload}/>\n  </Panel>\n);\n\nexport default LaunchDiv","import React from 'react';\nimport { Accordion } from '../dependencies/react-bootstrap-dependencies';\nimport LaunchDiv from \"./LaunchDiv\"\n\nconst LaunchDisplay = ({launches, favoritesStore, triggerReload}) => {\n  return (\n    <Accordion>\n      {launches.map(\n        (launchDetails) =>\n          launchDivConstructor(launchDetails, favoritesStore, triggerReload)\n        )\n      }\n    </Accordion>\n  );\n}\n\nconst launchDivConstructor = (launchDetails, favoritesStore, triggerReload) => {\n  return (\n    LaunchDiv({\n      launchDetails: launchDetails,\n      favoritesStore: favoritesStore,\n      triggerReload: triggerReload\n    })\n  );\n}\n\nexport default LaunchDisplay;","import React from 'react';\n\nconst RocketImage = ({imageURL, imageSizes}) => {\n  var regex = /_(\\d+)/g\n  var newImageURL = imageURL.replace(regex, `_${imageSizes[0]}` )\n\n  return (<img alt=\"Rocket\" src={newImageURL} />)\n}\n\nexport default RocketImage","import React, { Component } from 'react';\nimport { Button, Glyphicon } from \"../dependencies/react-bootstrap-dependencies\"\n\nclass FavoriteButton extends Component {\n  favoritesMessage() {\n    var launch = this.props.launch;\n    var isFavorite = this.props.favoritesStore.hasFavorite(launch);\n    return isFavorite ? \"Remove from Favorites\" : \"Add to Favorites\";\n  }\n\n  toggleFavorite = () => {\n    var launch = this.props.launch\n    this.props.favoritesStore.toggleFavorite(launch)\n    this.props.triggerReload();\n  }\n\n  render() {\n    return (\n      <Button onClick = {this.toggleFavorite} >\n        <Glyphicon glyph=\"star\" />\n        {\" \"}\n        {this.favoritesMessage()}\n      </Button>\n    );\n  }\n};\n\nexport default FavoriteButton;","import * as moment from 'moment';\n\nconst defaultStartDate = moment()\nconst defaultEndDate = moment().add(15, 'days')\n\nexport { defaultStartDate, defaultEndDate }","import React, { Component } from 'react';\nimport { DateRangePicker } from '../dependencies/react-date-dependencies'\nimport { defaultStartDate, defaultEndDate } from \"../defaults/all\"\n\nclass LaunchDatePicker extends Component {\n  constructor() {\n    super();\n    this.state = {\n      startDate: defaultStartDate,\n      endDate: defaultEndDate,\n      focusedInput: null\n    }\n  }\n\n  updateDates = (startDate, endDate) => {\n    this.setState({ startDate: startDate, endDate: endDate });\n    this.props.updateParentDate({ startDate: startDate, endDate: endDate });\n  }\n\n  render() {\n    return (\n      <div className=\"Launch-date-picker\">\n        <DateRangePicker\n          startDate={this.state.startDate}\n          endDate={this.state.endDate}\n          onDatesChange={({ startDate, endDate }) => this.updateDates(startDate, endDate) }\n          focusedInput={this.state.focusedInput}\n          onFocusChange={focusedInput => this.setState({ focusedInput })}\n          showClearDates={true}\n\n          //Necessary to allow users to pick dates earlier than today:\n          //https://github.com/airbnb/react-dates/issues/239#issuecomment-302574295\n          isOutsideRange={() => false } />\n      </div>\n    );\n  }\n\n}\n\nexport default LaunchDatePicker;","import React, { Component } from 'react';\nimport { Form, FormGroup, FormControl, InputGroup, DropdownButton, MenuItem } from \"../dependencies/react-bootstrap-dependencies\";\n\nclass SearchInput extends Component {\n\n  constructor() {\n      super();\n      this.state = { searchType: \"Country Code\", value: \"\" }\n  }\n\n  updateSearchType = (value) => {\n    var newSearchType;\n    if (value === \"1\") {\n      newSearchType = \"Country Code\"\n    } else {\n      newSearchType = \"Agency Abbrevation\"\n    }\n\n    this.setState( {searchType: newSearchType}, this.refreshSearch)\n  }\n\n  refreshSearch = () => {\n    this.doSearch(this.state.value, this.launchData)\n  }\n\n  agencyAbbrevations = (agencies) => {\n    var array = []\n    agencies.forEach((agency) => {\n      array.push(agency.abbrev)\n    })\n    return array.join(\" \")\n  }\n\n  launchData = (launch) => {\n    if (this.state.searchType === \"Country Code\") {\n      return launch.location.countryCode.toLowerCase()\n    } else {\n      return this.agencyAbbrevations(launch.rocket.agencies).toLowerCase()\n    }\n  }\n\n  handleChange = (queryText, launchData) => {\n    this.setState({value: queryText}, this.doSearch(queryText, launchData))\n  }\n\n  doSearch = (queryText, launchData) => {\n    var searchResults =[];\n    this.props.launches.forEach(function(launch){\n      if(launchData(launch).indexOf(queryText.toLowerCase()) !== -1)\n        searchResults.push(launch);\n    });\n    this.props.updateSearchResults({queryText: queryText, searchResults: searchResults})\n  }\n\n  render() {\n    return (\n      <Form inline>\n        <FormGroup className=\"Launch-search\">\n          <InputGroup>\n            <DropdownButton\n              componentClass={InputGroup.Button}\n              id=\"input-dropdown-addon\"\n              title={this.state.searchType}>\n                <MenuItem\n                  key=\"1\"\n                  onSelect = { () => this.updateSearchType(\"1\") }>\n                    Country Code\n                </MenuItem>\n                <MenuItem\n                  key=\"2\"\n                  onSelect = { () => this.updateSearchType(\"2\") }>\n                    Agency Abbrevation\n                </MenuItem>\n              </DropdownButton>\n            <FormControl\n              type=\"text\"\n              value={this.state.value}\n              placeholder=\"Search\"\n              onChange={(event) => this.handleChange(event.target.value, this.launchData)} />\n            </InputGroup>\n        </FormGroup>\n      </Form>\n    );\n  }\n}\n\nexport default SearchInput;","import React from 'react';\nimport { Panel } from \"../dependencies/react-bootstrap-dependencies\"\nimport LaunchDatePicker from \"./LaunchDatePicker\"\nimport SearchInput from \"./SearchInput\"\n\nconst SearchPanel = ({updateParentDate, launches, updateSearchResults}) => {\n  return (<Panel>\n      <LaunchDatePicker updateParentDate={updateParentDate}/>\n      <SearchInput\n        launches={launches}\n        updateSearchResults={updateSearchResults} />\n    </Panel>);\n}\n\nexport default SearchPanel;","import React from 'react';\nimport logo from './logo.svg';\n\nconst LoadingScreen = () => {\n  return (\n      <div>\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        { \"Loading\" }\n      </div>\n    )\n}\n\nexport default LoadingScreen;","import React, { Component } from 'react';\n\nimport { Tabs, Tab, Panel, Glyphicon } from '../dependencies/react-bootstrap-dependencies';\n\nimport { LaunchDisplay } from '../launches/all'\nimport { SearchPanel} from \"../search/all\"\nimport { LoadingScreen } from \"../utils/all\"\nimport { defaultStartDate, defaultEndDate } from \"../defaults/all\"\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = { launches: [], startDate: defaultStartDate, endDate: defaultEndDate, filtered: false, searchResults: [], favoriteLaunches: [], loading: false };\n  }\n\n  componentDidMount() {\n    this.queryData();\n  }\n\n  fullLaunchURLTemplate(formattedStartDate, formattedEndDate, offset) {\n    return `https://launchlibrary.net/1.3/launch/${formattedStartDate}/${formattedEndDate}?offset=${offset}`\n  }\n\n  launchesURL(offset) {\n    var startDate = this.state.startDate\n    var endDate = this.state.endDate\n    var formattedStartDate;\n    var formattedEndDate;\n    if (startDate == null && endDate == null) {\n      formattedStartDate = defaultStartDate.format('YYYY-MM-DD')\n      formattedEndDate = defaultEndDate.format('YYYY-MM-DD')\n      return this.fullLaunchURLTemplate(formattedStartDate, formattedEndDate, offset)\n    } else if (endDate == null) {\n      formattedStartDate = startDate.format('YYYY-MM-DD')\n      return `https://launchlibrary.net/1.3/launch/${formattedStartDate}?offset={offset}`\n    } else {\n      formattedStartDate = startDate.format('YYYY-MM-DD')\n      formattedEndDate = endDate.format('YYYY-MM-DD')\n      return this.fullLaunchURLTemplate(formattedStartDate, formattedEndDate, offset)\n    }\n  }\n\n  queryData() {\n    this.setState({loading: true})\n    var array = []\n    var initialUrl = this.launchesURL(0)\n\n    this.accessData(initialUrl, array)\n  }\n\n  accessData(url, arrayOfData) {\n    fetch(url)\n      .then(result => {\n        if (result.ok) {\n          return result.json()\n        } else {\n          console.log(result)\n          var errorMessage = `Response Failed. Status Code - ${result.status}. Error Message - ${result.statusText}`\n\n          throw new Error(errorMessage)\n        }\n      })\n      .then(data => {\n        this.processData(data, arrayOfData)\n      })\n      .catch(error => {\n        console.log(error)\n        this.errorHandler(error, arrayOfData)\n      })\n  }\n\n  processData(data, arrayOfData) {\n    var newArray = arrayOfData.concat(data.launches)\n\n    var launchesViewed = data.count + data.offset\n    var total = data.total\n\n    if (launchesViewed < total) {\n      var newOffset = data.offset + 10\n      var newUrl = this.launchesURL(newOffset)\n      this.accessData(newUrl, newArray)\n    } else {\n      this.setState({launches : newArray, loading: false})\n    }\n  }\n\n  errorHandler(error, arrayOfData) {\n    this.setState({launches : arrayOfData, loading: false})\n  }\n\n  updateParentDate = (object) => {\n    var startDate = object.startDate\n    var endDate = object.endDate\n    this.setState(\n      { startDate: startDate, endDate: endDate },\n      this.queryData\n    );\n  }\n\n  updateSearchResults = (object) => {\n    if (object.queryText === '') {\n      this.setState({\n        searchResults: object.searchResults,\n        filtered: false })\n    } else {\n      this.setState({\n        searchResults: object.searchResults,\n        filtered: true })\n    }\n  }\n\n  launchDisplayConstructor = (launches) => {\n    if (launches.length === 0) {\n      return (<span>No results.</span>)\n    } else {\n      return (\n        <LaunchDisplay\n          launches={launches}\n          favoritesStore={this.props.favoritesStore}\n          triggerReload={this.triggerReload} />\n      )\n    }\n  }\n\n  searchResultDisplay = () => {\n    if (this.state.loading === true) {\n      return(<LoadingScreen />)\n    }\n    else if (this.state.filtered === true) {\n      return this.launchDisplayConstructor(this.state.searchResults)\n    } else {\n      return this.launchDisplayConstructor(this.state.launches)\n    }\n  }\n\n  favoriteResultDisplay = () => {\n    return this.launchDisplayConstructor(this.props.favoritesStore.favorites)\n  }\n\n  triggerReload = () => {\n    this.forceUpdate()\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Tabs defaultActiveKey={1} id=\"navbar\">\n          <Tab eventKey={1} title=\"Search\">\n            <SearchPanel\n              updateParentDate={this.updateParentDate}\n              launches={this.state.launches}\n              updateSearchResults={this.updateSearchResults} />\n            <hr />\n\n            { this.searchResultDisplay() }\n          </Tab>\n          <Tab eventKey={2} title=\"Favorites\">\n            <Panel>\n              Your favorites are stored here. To add or remove a favorite, simply click on the <Glyphicon glyph=\"star\" /> button.\n            </Panel>\n            { this.favoriteResultDisplay() }\n          </Tab>\n        </Tabs>\n      </div>\n    );\n  }\n};\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {extendObservable } from 'mobx';\n\nclass FavoritesStore {\n  constructor() {\n    extendObservable(\n      this,\n      {\n      favorites: []\n      }\n    );\n  }\n\n  findIndex(id) {\n    return this.favorites.findIndex(launch => launch.id === id);\n  }\n\n  hasFavorite(launch) {\n    var index = this.findIndex(launch.id);\n    return (index > -1);\n  }\n\n  toggleFavorite(launch) {\n    var alreadyFavorited = this.hasFavorite(launch)\n    if (alreadyFavorited) {\n      this.removeFavorite(launch)\n    } else {\n      this.addFavorite(launch)\n    }\n  }\n\n  addFavorite(launch) {\n    this.favorites.push(launch);\n  }\n\n  removeFavorite(launch) {\n    var index = this.findIndex(launch.id);\n    if (index > -1) {\n      this.favorites.splice(index, 1);\n    }\n  }\n}\n\nexport default FavoritesStore;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from \"./App/App\";\nimport registerServiceWorker from './registerServiceWorker';\nimport { FavoritesStore } from './stores/all'\n\n// css files\nimport './css/index.css';\nimport './css/App.css';\nimport 'react-dates/lib/css/_datepicker.css';\n\nconst launchFavorites = new FavoritesStore()\n\nReactDOM.render(<App favoritesStore={launchFavorites}/>, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}